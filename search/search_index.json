{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to POD Project Document Overview POD (Synonymous for Python Object Detection) project usefull to determine and detect objects in Images , Videos and also WebCam like cat, dog, car and etc! Basically, this project is used as an api for projects used to detect objects. POD Project have two part : Core UserInterface Core can be used without UI in your project. The UI is used to make it look more beautiful and have a better feeling when working in this project! In UI we used flet framework to have a fantasy UI! POD used ONNX Models and YOLOv7 algorithm for train, object localization and object detection. What is ONNX Models ? ONNX is an intermediary machine learning framework used to convert between different machine learning frameworks. So let's say you're in TensorFlow, and you want to get to TensorRT, or you're in PyTorch, and you want to get to TFLite, or some other machine learning framework. ONNX is a good intermediary to use to convert your model as you're going through these different machine learning frameworks. ONNX has worked really hard to basically implement all kinds of different neural network functions and different functionalities in these machine learning models, so we can support this cross functionality to have baseline, common framework to convert into. There are several ways in which you can obtain a model in the ONNX format, including: ONNX Model Zoo: Contains several pre-trained ONNX models for different types of tasks. Read More What is YOLOv7 algorithm ? YOLO (\u201cYou Only Look Once\u201d) is an effective real-time object recognition algorithm, first described in the seminal 2015 paper by Joseph Redmon et al. Since the release of YOLOv1 in 2015, the algorithm has gained immense popularity among the computer vision community. Furthermore, the updated version of the model YOLOv2, YOLOv3, YOLOv4, YOLOv5, YOLOv6, and very much recently, YOLOv7 has been released so far. Note that YOLOv5 has been one of the most successful and commonly used versions of the YOLO series. So the same team creating the updated version is a reason to consider learning it. Yolov7 is a real-time object detector currently revolutionizing the computer vision industry with its incredible features. The official YOLOv7 provides unbelievable speed and accuracy compared to its previous versions. Yolov7 weights are trained using Microsoft\u2019s COCO dataset, and no pre-trained weights are used. Read More Most commonly frameworks and other tools that used in this project is : Numpy: 1.23.5 opencv-python: 4.6.0.66 Sympy: 1.11.1 Onnxruntime: 1.13.1 Pillow: 9.3.0 How to install and use ? To see how to install and use, refer to the relevant sections. Project Directory \u251c\u2500\u2500\u2500assets \u251c\u2500\u2500\u2500Core \u2502 \u2514\u2500\u2500\u2500yolov7 \u251c\u2500\u2500\u2500docs \u251c\u2500\u2500\u2500models \u251c\u2500\u2500\u2500Output \u2502 \u251c\u2500\u2500\u2500out_images \u2502 \u2514\u2500\u2500\u2500out_videos \u251c\u2500\u2500\u2500Samples \u2502 \u2514\u2500\u2500\u2500Images \u2514\u2500\u2500\u2500UI","title":"Home"},{"location":"#welcome-to-pod-project-document","text":"","title":"Welcome to POD Project Document"},{"location":"#overview","text":"POD (Synonymous for Python Object Detection) project usefull to determine and detect objects in Images , Videos and also WebCam like cat, dog, car and etc! Basically, this project is used as an api for projects used to detect objects. POD Project have two part : Core UserInterface Core can be used without UI in your project. The UI is used to make it look more beautiful and have a better feeling when working in this project! In UI we used flet framework to have a fantasy UI! POD used ONNX Models and YOLOv7 algorithm for train, object localization and object detection.","title":"Overview"},{"location":"#what-is-onnx-models","text":"ONNX is an intermediary machine learning framework used to convert between different machine learning frameworks. So let's say you're in TensorFlow, and you want to get to TensorRT, or you're in PyTorch, and you want to get to TFLite, or some other machine learning framework. ONNX is a good intermediary to use to convert your model as you're going through these different machine learning frameworks. ONNX has worked really hard to basically implement all kinds of different neural network functions and different functionalities in these machine learning models, so we can support this cross functionality to have baseline, common framework to convert into. There are several ways in which you can obtain a model in the ONNX format, including: ONNX Model Zoo: Contains several pre-trained ONNX models for different types of tasks. Read More","title":"What is ONNX Models ?"},{"location":"#what-is-yolov7-algorithm","text":"YOLO (\u201cYou Only Look Once\u201d) is an effective real-time object recognition algorithm, first described in the seminal 2015 paper by Joseph Redmon et al. Since the release of YOLOv1 in 2015, the algorithm has gained immense popularity among the computer vision community. Furthermore, the updated version of the model YOLOv2, YOLOv3, YOLOv4, YOLOv5, YOLOv6, and very much recently, YOLOv7 has been released so far. Note that YOLOv5 has been one of the most successful and commonly used versions of the YOLO series. So the same team creating the updated version is a reason to consider learning it. Yolov7 is a real-time object detector currently revolutionizing the computer vision industry with its incredible features. The official YOLOv7 provides unbelievable speed and accuracy compared to its previous versions. Yolov7 weights are trained using Microsoft\u2019s COCO dataset, and no pre-trained weights are used. Read More","title":"What is YOLOv7 algorithm ?"},{"location":"#most-commonly-frameworks-and-other-tools-that-used-in-this-project-is","text":"Numpy: 1.23.5 opencv-python: 4.6.0.66 Sympy: 1.11.1 Onnxruntime: 1.13.1 Pillow: 9.3.0","title":"Most commonly frameworks and other tools that used in this project is :"},{"location":"#how-to-install-and-use","text":"To see how to install and use, refer to the relevant sections.","title":"How to install and use ?"},{"location":"#project-directory","text":"\u251c\u2500\u2500\u2500assets \u251c\u2500\u2500\u2500Core \u2502 \u2514\u2500\u2500\u2500yolov7 \u251c\u2500\u2500\u2500docs \u251c\u2500\u2500\u2500models \u251c\u2500\u2500\u2500Output \u2502 \u251c\u2500\u2500\u2500out_images \u2502 \u2514\u2500\u2500\u2500out_videos \u251c\u2500\u2500\u2500Samples \u2502 \u2514\u2500\u2500\u2500Images \u2514\u2500\u2500\u2500UI","title":"Project Directory"},{"location":"about/","text":"About Me My name is Mustafa. I am a novice Python programmer and love learning and open source projects. I also am interested in sharing knowledge as well as what I learn. Contact Me You can contact me on Gmail : G ail : m2kappswindows8.1@gmail.com","title":"About"},{"location":"about/#about-me","text":"My name is Mustafa. I am a novice Python programmer and love learning and open source projects. I also am interested in sharing knowledge as well as what I learn.","title":"About Me"},{"location":"about/#contact-me","text":"You can contact me on Gmail : G ail : m2kappswindows8.1@gmail.com","title":"Contact Me"},{"location":"how-use/","text":"The following steps guide you in using POD Project: First of starting to use this project you need a ONNX Model ! You can download models from this link . Info In this guide we used yolov7_736x1280.onnx model. After download models, put model in models directory and continue this guide. Step 1: Import package To use POD Project features just import AiCore package : from Core import AiCore Step 2: Image detection To use image detection, just do this: AiCore . image_detection ( from_path = \"local_path\" , from_url = \"url_path\" ) In above code, we have two parameters : from_path: If you have image already in your local system, so you can use this. from_url: If you want use a url link, so you can use this. For example : from_path: AiCore . image_detection ( from_path = \"C:\\ImagePath\\example.jpg\" ) from_url: AiCore . image_detection ( from_url = \"https://cdn.britannica.com/88/150788-050-77F67105/Children-corn-Terekeka-South-Sudan.jpg\" ) Step 3: Video Detection Same as image detection, the method of using video detection is like that: AiCore . video_detection ( from_path = \"local_path\" , from_youtube = \"youtube url\" ) In video_detection we have two parameters too, from_path and from_youtube . from_path: when you want use a video in your local system. from_youtube: when you want use a video url on youtube. In continue, we have some examples for above parameters : from_path : AiCore . video_detection ( from_path = \"C:\\VideoPath\\example.mp4\" ) from_youtube : AiCore . video_detection ( from_youtube = \"https://youtu.be/yYo0XQp97vo\" ) UserInterface To run app in UI mode, just run this command: from UI import appUI appUI . run_app () or from UI.appUI import run_app run_app () Attention User Interface of this project is in alpha version, so it haven't url detection feature (will added) and maybe it have some problem and bugs. If you found any problem or bug you can create a issue on github of this project.","title":"How to use"},{"location":"how-use/#you-can-download-models-from-this-link","text":"Info In this guide we used yolov7_736x1280.onnx model. After download models, put model in models directory and continue this guide.","title":"You can download models from this link."},{"location":"how-use/#step-1-import-package","text":"To use POD Project features just import AiCore package : from Core import AiCore","title":"Step 1: Import package"},{"location":"how-use/#step-2-image-detection","text":"To use image detection, just do this: AiCore . image_detection ( from_path = \"local_path\" , from_url = \"url_path\" ) In above code, we have two parameters : from_path: If you have image already in your local system, so you can use this. from_url: If you want use a url link, so you can use this.","title":"Step 2: Image detection"},{"location":"how-use/#for-example","text":"from_path: AiCore . image_detection ( from_path = \"C:\\ImagePath\\example.jpg\" ) from_url: AiCore . image_detection ( from_url = \"https://cdn.britannica.com/88/150788-050-77F67105/Children-corn-Terekeka-South-Sudan.jpg\" )","title":"For example :"},{"location":"how-use/#step-3-video-detection","text":"Same as image detection, the method of using video detection is like that: AiCore . video_detection ( from_path = \"local_path\" , from_youtube = \"youtube url\" ) In video_detection we have two parameters too, from_path and from_youtube . from_path: when you want use a video in your local system. from_youtube: when you want use a video url on youtube. In continue, we have some examples for above parameters : from_path : AiCore . video_detection ( from_path = \"C:\\VideoPath\\example.mp4\" ) from_youtube : AiCore . video_detection ( from_youtube = \"https://youtu.be/yYo0XQp97vo\" )","title":"Step 3: Video Detection"},{"location":"how-use/#userinterface","text":"To run app in UI mode, just run this command: from UI import appUI appUI . run_app ()","title":"UserInterface"},{"location":"how-use/#or","text":"from UI.appUI import run_app run_app () Attention User Interface of this project is in alpha version, so it haven't url detection feature (will added) and maybe it have some problem and bugs. If you found any problem or bug you can create a issue on github of this project.","title":"or"},{"location":"installation/","text":"The following steps guide you in installing POD: Step 1: Clone repository First of all you must clone POD Project repository from github. For that enter this command in your terminal : git clone https://github.com/MosTafa2K/POD-Project.git Step 2: Create a virtual environment Now you need create a virtual environment to install packages in one place! For initialize a virtual environment go to POD Project directory and then run this command in your terminal: Linux: python3 -m venv venv Windows: python -m venv venv Note Second venv is my choice, So you can choose another name. Step 3: Active virtual environment To active virtual environment, run this command in your terminal: Linux: source ./venv/bin/activate Windows: venv/Scripts/activate Step 4: Install requiremenet packages To install requirement packages, just run this command in your terminal: Linux: python3 -m pip install -r requirements.txt Windows: python -m pip install -r requirements.txt","title":"Installation"},{"location":"installation/#step-1-clone-repository","text":"First of all you must clone POD Project repository from github. For that enter this command in your terminal : git clone https://github.com/MosTafa2K/POD-Project.git","title":"Step 1: Clone repository"},{"location":"installation/#step-2-create-a-virtual-environment","text":"Now you need create a virtual environment to install packages in one place! For initialize a virtual environment go to POD Project directory and then run this command in your terminal: Linux: python3 -m venv venv Windows: python -m venv venv Note Second venv is my choice, So you can choose another name.","title":"Step 2: Create a virtual environment"},{"location":"installation/#step-3-active-virtual-environment","text":"To active virtual environment, run this command in your terminal: Linux: source ./venv/bin/activate Windows: venv/Scripts/activate","title":"Step 3: Active virtual environment"},{"location":"installation/#step-4-install-requiremenet-packages","text":"To install requirement packages, just run this command in your terminal: Linux: python3 -m pip install -r requirements.txt Windows: python -m pip install -r requirements.txt","title":"Step 4: Install requiremenet packages"}]}